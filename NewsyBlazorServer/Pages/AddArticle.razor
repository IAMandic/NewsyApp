@page "/AddArticle"
@using System.Security.Claims

<h3>Add Article</h3>
@inject IArticleService _articleService;
@inject NavigationManager _navigationManager;
@inject ILocalStorageService _localStorageService;
@inject AuthenticationStateProvider _authProvider;
@inject UserService _userService;
@code {
    public Article Article { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Article = new Article();
        Article.Updated = DateTime.Now;
        Article.Created = DateTime.Now;
        var authState = await _authProvider.GetAuthenticationStateAsync();
        var identity = authState.User.Identity;
        var users = await _userService.GetUsers();
        var user = users.FirstOrDefault(item => item.UserName == identity.Name.ToString());
        if (user != null)
            Article.UserId = user.Id;

    }

    private void Close()
    {
        _navigationManager.NavigateTo("/");
    }
    private async Task AddArticleAsync()
    {
        await _articleService.AddArticlteAsync(Article);
        Close();
    }
}

<EditForm Model="@Article" OnValidSubmit="@AddArticleAsync">
    <ArticleFields Article="@Article"></ArticleFields>
    <button class="btn btn-success" type="submit">
        <span class="glyphicon glyphicon-ok"></span>
        Add
    </button>
    <button type="button" class="btn btn-danger" @onclick="Close">
        @*<span class="oi oi-media-skip-backward"></span>*@
        <span class="glyphicon glyphicon-remove"></span>
        Close
    </button>

</EditForm>
